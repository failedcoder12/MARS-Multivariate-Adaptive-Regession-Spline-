# -*- coding: utf-8 -*-
"""MARS_EXAMPLE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G-QeE9Fcr2qOaWimspiMTQdKfUrHyktd
"""

#Download pyearth lobrary
!pip install sklearn-contrib-py-earth

# Importing numpy maths library for math processing
import numpy as np
#Importing matplotlib library for graph plotting
import matplotlib.pyplot as plt
#Impoting MARS(EARTH) model from pyearth
from pyearth import Earth

#Creating a fake data of sin distribution
m = 300
X = []
for i in range(0,m,3):
  X.append((i+.0)/100 * np.pi)
X = np.array(X)
y = np.sin(X) + np.random.normal(size=X.shape[0])/10.0  

#Defining different knots which will be used as a parameter for MARS model
knots = [2,4,5,10]

#Helpful in creating graph
axis = [[0,0],[0,1],[1,0],[1,1]]

#Defining different max_degree parameter for MARS model parameter
for degree in range(1,5):
  fig,ax = plt.subplots(2,2,figsize=(10, 10))

  for num_knot in range(4):
    # Defining MARS model with max_term and max_degree parameter
    model = Earth(max_terms=knots[num_knot],max_degree=degree,verbose=0)
    
    #Fitting the dataset on the dataset
    model.fit(X, y)

    #Prediction model output
    y_hat = model.predict(X)

    #Potting graphs
    ax[axis[num_knot][0],axis[num_knot][1]].title.set_text(f"degree = {degree}, knots = {knots[num_knot]}")
    ax[axis[num_knot][0],axis[num_knot][1]].plot(X,y,'r.')
    ax[axis[num_knot][0],axis[num_knot][1]].plot(X,y_hat,'b.')
  plt.show()

# Plotting dataset distribution
plt.figure()
plt.plot(X, y, 'r.')
plt.show()

model = Earth(max_terms=10,max_degree=4,verbose=0)
model.fit(X, y)

#Summary of model
print(model.summary())

#How model learns
print(model.trace())

#Prediction
y_hat = model.predict(X)

